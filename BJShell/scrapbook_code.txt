	private static String grep(String s, String regex, GrepOptionSet_Fcilnvx GrepOptions) {
		Unix4jCommandBuilder builder = Unix4j.builder();
		StringOutput output = new StringOutput();

//		builder.gre
		builder.grep(GrepOptions, regex, new StringInput(s)).toOutput(output);

		return output.toString();
	}

	static public String bgrep(String s, String regex, String splitBy, String replacementDelim) {
//		List<String> lines = Collections.emptyList();
//		if(splitBy == null) {
//			lines.add(s);
//		} else {
//		   String[] splitA = s.split(splitBy);
//			Arrays.
//		}
		return null;

	}

		static public String grep(String s, String regex) {
		Unix4jCommandBuilder builder = Unix4j.builder();
		StringOutput output = new StringOutput();

//		builder.gre
		builder.grep(regex, new StringInput(s)).toOutput(output);

		return output.toString();
	}
	static public String grepV(String s, String regex) {
		GrepOptionSet_Fcilnvx GrepOptions = Grep.Options.invertMatch;
		return grep(s, regex, GrepOptions);
	}

	
	static public String reverseLines(String s) {
		Unix4jCommandBuilder builder = Unix4j.builder();
		StringOutput output = new StringOutput();
		builder.cat(new StringInput(s)).sort(Sort.Options.reverse);
		builder.toOutput(output);
		return output.toString();
	}


	/* SAMPLE REGEX REGULAR EXPRESSIONS 
	 * 
	 * ^[^/\n]*.close\(\)  //find cases of close( ) that need try-with-resources
	 * 
	 * */

	/**
	 * @deprecated review this before using
	 * 
	 * @param <T>
	 * @param c
	 * @return
	 */
	protected static <T> List<T> getSortedList(Collection<T> c) {
		List<T> l = new ArrayList<T>();
		l.addAll(c);
		Collections.sort(l, StringUtil.getToStringComparator());
		return l;
//		l.sort(new Comparator<T>() {
//			@Override
//			public int compare(T o1, T o2) {
//				// TODO Auto-generated method stub
//				return 0;
//			}
//		};
//		return null;
	}


//					sp2.validate(); //attempt to enable accurate scrolling, failed
//							Rectangle rect = new Rectangle(new Point(1, -99999));
//								scrollPane.scrollRectToVisible(rect); //not working
//							JScrollBar vsb  = scrollPane.getVerticalScrollBar();
//							vsb.setValue(vsb.getMaximum()); //not sure why this doesn't work consis
